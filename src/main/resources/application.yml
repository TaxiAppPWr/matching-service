spring:
  application:
    name: driver-matching-service
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

server:
  port: 85

services:
  location-service:
    base-url: http://localhost:86
    timeout: 5000
  notification-service:
    base-url: http://localhost:87

matching:
  max-drivers-to-try: 10
  search-radius-km: 10
  driver-confirmation-timeout-seconds: 30
  delay-between-attempts-ms: 1000

rabbitmq:
  exchange:
    driver-matching: driver.matching.exchange
  routing-key:
    driver-matching: driver.matching
    matching-cancelled: matching.cancelled
    ride:
        finished: ride.finished
        cancel: ride.cancel
  queue:
    driver-matching: driver.matching.queue
    ride-events: driver.matching.ride.events.queue

aws:
  dynamodb:
    region: eu-north-1
    driver-status-table: driver-status
    driver-connections-table: driver-connections
  access_key: ${AWS_ACCESS_KEY}
  secret_access_key: ${AWS_SECRET_ACCESS_KEY}

logging:
  level:
    com.example: DEBUG